/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HealthcareSystem,
  HealthcareSystemInterface,
} from "../HealthcareSystem";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "aadharNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "HealthCoinsAwarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "aadharNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "HealthCoinsRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "aadharNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "hospital",
        type: "address",
      },
    ],
    name: "PrescriptionAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_aadharNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "_diagnosis",
        type: "string",
      },
      {
        internalType: "string",
        name: "_medication",
        type: "string",
      },
      {
        internalType: "string",
        name: "_dosage",
        type: "string",
      },
      {
        internalType: "string",
        name: "_notes",
        type: "string",
      },
    ],
    name: "addPrescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_aadharNumber",
        type: "string",
      },
    ],
    name: "getHealthCoins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_aadharNumber",
        type: "string",
      },
    ],
    name: "getPrescriptions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "diagnosis",
            type: "string",
          },
          {
            internalType: "string",
            name: "medication",
            type: "string",
          },
          {
            internalType: "string",
            name: "dosage",
            type: "string",
          },
          {
            internalType: "string",
            name: "notes",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "hospital",
            type: "address",
          },
        ],
        internalType: "struct HealthcareSystem.Prescription[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "healthCoins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "prescriptions",
    outputs: [
      {
        internalType: "string",
        name: "diagnosis",
        type: "string",
      },
      {
        internalType: "string",
        name: "medication",
        type: "string",
      },
      {
        internalType: "string",
        name: "dosage",
        type: "string",
      },
      {
        internalType: "string",
        name: "notes",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "hospital",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_aadharNumber",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeemHealthCoins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hospital",
        type: "address",
      },
    ],
    name: "registerHospital",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredHospitals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type HealthcareSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthcareSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthcareSystem__factory extends ContractFactory {
  constructor(...args: HealthcareSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HealthcareSystem> {
    return super.deploy(overrides || {}) as Promise<HealthcareSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HealthcareSystem {
    return super.attach(address) as HealthcareSystem;
  }
  override connect(signer: Signer): HealthcareSystem__factory {
    return super.connect(signer) as HealthcareSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthcareSystemInterface {
    return new utils.Interface(_abi) as HealthcareSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HealthcareSystem {
    return new Contract(address, _abi, signerOrProvider) as HealthcareSystem;
  }
}
